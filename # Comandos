___________________________________________________________________________
                               
                                COMANDOS
___________________________________________________________________________    

# https://kubernetes.io/pt/docs/reference/kubectl/cheatsheet/                            

$ kubectl cluster-info
$ kubectl get namespace
$ kubectl get nodes --all-namespaces
$ kubectl get pods --all-namespaces
$ kubectl get services
$ curl http://192.168.0.2:30000/
$ kubectl get pods
$ kubectl config get-contexts (verificar lista de contextos configurados)

--- 

- Para definir um Namespace para o seu contexto atual, use set-context --current:

$ kubectl config set-context --current --namespace=nome_do_namespace

- Para criar um Namespace, use create namespace:

$ kubectl create namespace namespace_name

_________________________________________________________________________
                               
                               DASHBOARD
_________________________________________________________________________                               

$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta4/aio/deploy/recommended.yaml

$ kubectl -n kubernetes-dashboard describe service kubernetes-dashboard

_________________________________________________________________________
                         
                     DASHBOARD - USUÁRIO ADMIN (TOKEN)
_________________________________________________________________________


$ kubectl apply -f kubernetes-dashboard-service-np.yaml 

$ kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')  

#logon
https://192.168.0.10:30002/#/login


_________________________________________________________________________
                             
                              DEPLOYMENT APP SPRING
_________________________________________________________________________  
    
1 - Criar o manifesto (app-spring.yaml)
       - Deploy
       - Container
       - Service 

2 - Criar o deployment 
$ kubectl apply -f primeirodeploy.yaml  

3 - Listar os pods        
$ kubectl get pods -o wide

4 - Listar os services
$ kubectl get services

Acessar o navegador ip:porta

_________________________________________________________________________

- https://spring.io/guides/gs/spring-boot-kubernetes/  
- https://medium.com/@fidelissauro/kubernetes-criando-um-cluster-simples-com-o-kubeadm-e50a9eb4f4a6

#Exemplo de deploy

1 . Criar Dockerfile
2 . $ docker build -t springguides/demo .
3 . $ docker run -p 8080:8080 springguides/demo
4 . $ curl localhost:8080/actuator/health
4 . $ docker login
5 . $ docker push springguides/demo
6 . $ kubectl create deployment demo --image=springguides/demo --dry-run -o=yaml > deployment.yaml
7 . echo --- >> deployment.yaml
8 . $ kubectl create service clusterip demo --tcp=8080:8080 --dry-run -o=yaml >> deployment.yaml
9 . $ kubectl apply -f deployment.yaml
10. $ kubectl get all
11. $ kubectl port-forward svc/demo 8080:8080

__________________________________________________________________________

