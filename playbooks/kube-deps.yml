# Instalação das dependências do docker e kubernets - Centos e Ubuntu

- hosts: 
    worker1
    worker2
    master
  become: yes
  tasks:
    - name: criando pasta docker no /etc 
      file:
        path: /etc/docker
        state: directory
        mode: 0755
    - block:
        - name: instalando dependencias - CentOS
          yum:
            name: ['yum-utils', 'device-mapper-persistent-data', 'lvm2']
            state: present
            update_cache: true

        - name: add repo docker - CentOS
          get_url:
            url: https://download.docker.com/linux/centos/docker-ce.repo
            dest: /etc/yum.repos.d/docker-ce.repo
            mode: 0440

        - name: instalando docker - CentOS
          yum:
            name: docker-ce-18.06.2.ce
            state: present
            update_cache: true
           

        - name: adicionando os parametros de confiugração do docker daemon - CentOS
          blockinfile:
            dest: /etc/docker/daemon.json
            marker: ''
            create: yes
            block: |
              {
                "exec-opts": ["native.cgroupdriver=systemd"],
                "log-driver": "json-file",
                "log-opts": {
                  "max-size": "100m"
                },
                "storage-driver": "overlay2",
                "storage-opts": [
                  "overlay2.override_kernel_check=true"
                ]
              }
   
        - name: disabilita SELinux no próximo reboot - CentOS
          selinux:
            state: disabled

        - name: disabilita SELinux - CentOS
          command: setenforce 0
          ignore_errors: True
          changed_when: false
        
        - name: add repositorio YUM Kubernetes - CentOS
          yum_repository:
           name: Kubernetes
           description: Kubernetes YUM repository
           baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
           gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
           gpgcheck: yes
      when: ansible_os_family == "RedHat"

    - block:
        - name: instalando dependencias - Ubuntu
          apt:
            name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
            update_cache: true

        - name: adicionando chave gpg do docker - Ubuntu
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: adicionando o repo do docker - Ubuntu
          apt_repository:
            repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
            state: present
            filename: docker-ce
     
        - name: instalando o docker ce - Ubuntu
          apt:
            name: docker-ce=18.06.2~ce~3-0~ubuntu
            update_cache: true
            state: present
            

        - name: adicionando o arquivo daemon.json - Ubuntu
          blockinfile:
            dest: /etc/docker/daemon.json
            create: yes
            block: |
               {
                 "exec-opts": ["native.cgroupdriver=systemd"],
                 "log-driver": "json-file",
                 "log-opts": {
                   "max-size": "100m"
                 },
                 "storage-driver": "overlay2"
               }
        - name: adicionando a chave do repo - Ubuntu
          apt_key:
            url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
            state: present

        - name: adicionando o repo do kubernete - Ubuntu
          apt_repository:
            repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
            state: present
            filename: kubernetes
      when: ansible_os_family == "Debian"
     
    - name: criando a pasta docker no systemd
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: 0755

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
      become: yes

    - name: Adicionando usuário ansible ao grupo docker 
      user:
        name: ansible
        groups: docker
        append: yes
      become: yes  

    - name: Adicionando usuário vagrant ao grupo docker 
      user:
        name: vagrant
        groups: docker
        append: yes
      become: yes 
       

    - name: garantindo que net.bridge.bridge-nf-call-ip6tables esteja setada como 1
      sysctl:
       name: net.bridge.bridge-nf-call-ip6tables
       value: 1
       state: present

    - name: grantindo net.bridge.bridge-nf-call-iptables esteja setada como 1
      sysctl:
       name: net.bridge.bridge-nf-call-iptables
       value: 1
       state: present

    - name: instalando kubelet e kubeadm
      yum:
        name: ['kubelet', 'kubeadm']
        state: present
        update_cache: true
      when: ansible_os_family == "RedHat"
    
    - name: instalando o kubelet - Ubuntu
      apt:
        name: ['kubelet', 'kubeadm']
        present: true
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: start kubelet
      service:
        name: kubelet
        enabled: yes
        state: started

- hosts: master
  become: yes
  tasks:
   - name: instalando kubectl
     yum:
        name: kubectl
        state: present
     when: ansible_os_family == "RedHat"

   - name: instalando kubectl - Ubuntu
     apt:
        name: kubectl
        state: present
        update_cache: true
     when: ansible_os_family == "Debian"



  